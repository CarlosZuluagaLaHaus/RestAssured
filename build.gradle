buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "net.serenity-bdd:serenity-gradle-plugin:2.2.0"
        classpath "net.serenity-bdd:serenity-single-page-report:2.2.0"
        classpath "io.freefair.gradle:lombok-plugin:5.0.0-rc6"
    }
}

plugins {
    id 'java'
    id "io.freefair.lombok" version "5.0.0-rc6"
    id "io.qameta.allure" version "2.8.1"
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

group 'org.example'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'net.serenity-bdd.aggregator'
apply plugin: "io.freefair.lombok"

repositories {
    mavenCentral()
    mavenLocal()
    jcenter()
}

serenity {
    reports = ["single-page-html"]
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'io.rest-assured', name: 'rest-assured', version: '4.3.2'
    testCompile group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.11.3'
    implementation "net.serenity-bdd:serenity-core:2.2.0",
            "net.serenity-bdd:serenity-screenplay:2.2.0",
            "net.serenity-bdd:serenity-screenplay-rest:2.2.0"
    testImplementation "net.serenity-bdd:serenity-cucumber5:2.2.0"
    compile group: 'io.qameta.allure', name: 'allure-rest-assured', version: '2.13.8'
    compile group: 'io.qameta.allure', name: 'allure-junit4', version: '2.13.8'
}

allure{
    autoconfigure = true
    aspectjweaver = true
    version = "2.8.1"
    reportDir = file("build/allure-results")
    downloadLinkFormat = "https://dl.bintray.com/qameta/maven/io/qameta/allure/allure-commandline/%s/allure-commandline-%<s.zip"
}

test {
    maxParallelForks = Runtime.runtime.availableProcessors()
}

wrapper {
    gradleVersion = '6.8'
}

tasks.withType(Test) {
    maxParallelForks = Runtime.runtime.availableProcessors()
}

gradle.startParameter.continueOnFailure = true
test.finalizedBy(aggregate, reports)
